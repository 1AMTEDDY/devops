# Default values for myHelm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2  
containers:
image:
    repository: nginx
    pullPolicy: IfNotPresent
# Overrides the image tag whose default is the chart appVersion.
    tags: "ngnix"


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  Name: cherrybomb

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
   type: NodePort 
   port: 80

   
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  kubernetes.io/ingress.class: nginx
  kubernetes.io/tls-acme: "true"
  hosts:
    - host: myhelm.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
   #  - secretName: chart-example-tls
   #    hosts:
   #      - chart-example.local
  

jobs:
  # my first cron
  - name: hello-world
    image:
      repository: hello-world
      tag: latest
      imagePullPolicy: IfNotPresent
    schedule: "*/2 * * * *"
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    concurrencyPolicy: Allow
    restartPolicy: OnFailure


resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
     cpu: 100m
     memory: 128Mi
  requests:
     cpu: 100m
     memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
